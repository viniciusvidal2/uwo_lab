<?xml version="1.0"?>
<launch>
    <arg name="robot_name" default="robot"/>
    <arg name="do_log" default="false"/>

    <param name="scan_line" type="int" value="64" />

    <!-- if 1, do mapping 10 Hz, if 2, do mapping 5 Hz. Suggest to use 1, it will adjust frequence automaticlly -->
    <param name="mapping_skip_frame" type="int" value="1" />

    <!-- remove too closed points -->
    <param name="minimum_range" type="double" value="0.3"/>

    <param name="mapping_line_resolution" type="double" value="0.4"/> <!-- A-LOAM -->
    <param name="mapping_plane_resolution" type="double" value="0.8"/> <!-- A-LOAM -->

    <param name="mapviz_filter_size" type="double" value="0.05"/>

    <!-- SC-A-LOAM -->
    <param name="keyframe_meter_gap" type="double" value="0.5"/>

    <!-- Scan Context -->
    <param name="sc_dist_thres" type="double" value="0.3"/> <!-- SC-A-LOAM, if want no outliers, use 0.1-0.15 -->
    <param name="sc_max_radius" type="double" value="20.0"/> <!--20 or 40 for indoor -->
<!--    <param name="sc_max_radius" type="double" value="40.0"/> -->

    <!-- for MulRan -->
    <param name="lidar_type" type="string" value="Avia"/>

    <!-- input from FASTLIO2 plus our color algorithm -->
    <remap from="/aft_mapped_to_init" to="/$(arg robot_name)/odometry"/>
    <remap from="/velodyne_cloud_registered_local" to="/$(arg robot_name)/cloud_colored"/>
<!--    <remap from="/aft_mapped_to_init" to="/Odometry"/>-->
<!--    <remap from="/velodyne_cloud_registered_local" to="/cloud_registered_body"/>-->
    <remap from="/cloud_for_scancontext" to="/cloud_registered_lidar"/>   <!-- because ScanContext requires lidar-ego-centric coordinate for the better performance -->

    <!-- utils -->
    <param name="save_directory" type="string" value="$(env HOME)/Desktop/catkin_fastlio_slam/data/"/>  <!-- CHANGE THIS and end with / -->

    <!-- nodes -->
    <arg name="scan_context_node_name" value="scan_context_node"/>
    <node pkg="aloam_velodyne" type="alaserPGO" name="$(arg scan_context_node_name)" output="screen"> <!-- Scan Context-based PGO -->
    </node>
    <node name="log_$(arg scan_context_node_name)" if="$(arg do_log)" pkg="cpu_monitor" type="log_ram_cpu_node" output="screen">
        <param name="robot_name" type="string" value="$(arg robot_name)"/>
        <param name="node_name" type="string" value="$(arg scan_context_node_name)"/>
    </node>

    <!-- visulaization -->
    <arg name="rvizscpgo" default="true" />
    <group if="$(arg rvizscpgo)">
        <node launch-prefix="nice" pkg="rviz" type="rviz" name="rvizscpgo" args="-d $(find aloam_velodyne)/rviz_cfg/aloam_velodyne.rviz" />
    </group>

</launch>
